import React, { useEffect, useState } from "react";
import axios from "axios";
// import styled from "styled-components";
import Image from "next/image";
import Head from "next/head";

export default function Post() {
  const url_v1 = process.env.NEXT_PUBLIC_API_URL_V1;
  const url_v2 = process.env.NEXT_PUBLIC_API_URL_V2;
  const [isLoading, setLoading] = useState(false);
  const [file, setFile] = useState(null);

  const [name, setName] = useState("");
  const [subname, setSubname] = useState("");
  const [description, setDescription] = useState("");
  const [status, setStatus] = useState("");
  const [picture, setPicture] = useState("");
  const [imagePreview, setImagePreview] = useState("");

  const handleFileChange = (e) => {
    const selectedFile = e.target.files[0];
    setFile(selectedFile);
    if (!selectedFile) {
      setImagePreview(null);
      return;
    }
    if (!["image/png", "image/jpeg", "image/jpg"].includes(selectedFile.type)) {
      alert("Please select a valid image file");
      setFile(null);
      setImagePreview(null);
      return;
    }
    const reader = new FileReader();
    reader.onloadend = () => {
      setImagePreview(reader.result);
    };
    reader.readAsDataURL(selectedFile);
  };

  useEffect(() => {
    Profile();
  }, []);

  if (isLoading)
    return (
      <div className="large-indicator">
        <div></div>
        <div></div>
        <div></div>
      </div>
    );

  const Profile = async () => {
    try {
      const token = localStorage.getItem("token");
      const resp = await axios.get(url_v2 + "profile", {
        headers: {
          Authorization: "Bearer " + token,
        },
      });
      if (resp.data.status !== 200) {
        window.location.href = "/login";
      }

      console.log("subName", resp.data.data[0]);

      const { name, description, status, subname, picture } = resp.data.data[0];
      setName(name);
      setSubname(subname);
      setDescription(description);
      setStatus(status);
      setPicture(picture);
    } catch (err) {
      // Handle Error Here
      console.error(err);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    const token = localStorage.getItem("token");
    const formData = new FormData();
    formData.append("image", file);
    formData.append("Name", name);
    formData.append("SubName", subname);
    formData.append("Description", description);
    formData.append("Status", status);
    axios
      .post(url_v2 + "profile", formData, {
        headers: {
          Authorization: "Bearer " + token,
        },
      })
      .then((response) => {
        if (response.data === '{"status":201}{"status":200}') {
          alert("Name used");
          // console.log(response.data);
          //   router.push("/login");
          // (window.location.href = "/")
        }
        alert("succecfully");
        window.location.href = "/Profile";
      })
      .catch((err) => console.error(err));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script
          src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
          crossOrigin="anonymous"
        ></script>
      </Head>
      <style>
        {`
    
    .post{
      width: 100%;
      height: auto;
      background: #fff;
      border: 1px solid #dfdfdf;
      margin-top: 10px;
      margin-bottom: 20px;
  }

  
  .post-image{
      width: 100%;
      height: 500px;
      object-fit: cover;
      
  }
  
  .post-content{
      width: 100%;
      padding: 20px;
  }
  
  
  .comment-wrapper{
      width: 100%;
      height: 50px;
      border-radius: 1px solid #dfdfdf;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-top: 10px;
  }
  
  .comment-wrapper .icon,.ic{
      height: 30px;
      padding-left: 12px;
      padding-right: 12px;
  }
  
  .comment-box{
      width: 80%;
      height: 100%;
      border: none;
      outline: none;
      font-size: 14px;
  }
  
  .comment-btn{
      width: 70px;
      height: 100%;
      background: none;
      border: none;
      outline: none;
      text-transform: capitalize;
      font-size: 16px;
      color: rgb(0, 162, 255);
      // opacity: 0.5;
  }
  
  .reaction-wrapper{
      width: 100%;
      height: 50px;
      display: flex;
      margin-top: -40px;
      align-items: center;
  }
  
  
  .reaction-wrapper .icon.save{
      margin-left: auto;
      margin-right: 4px;

  }
  textarea {
    width: 100%;
    // height: 50px;
    // box-sizing: border-box;
    // border: 2px solid #ccc;
    // border-radius: 4px;
    background-color: #f8f8f8;
    font-size: 16px;
    resize: none;
  }

  .topNoti{
    padding-top: 24px;
  }

  @media screen and (max-width: 700px) {
    .topNoti {
      padding-top: 72px;
      
      }
    
  }
  `}
      </style>

      <div className="content ">
        <div className="wrapper topNoti">
          <div className="left-col">
            <form onSubmit={handleSubmit}>
              <div className="post">
                <br />
                {imagePreview ? (
                  <img
                    src={imagePreview}
                    alt="Preview"
                    className="post-image"
                  />
                ) : (
                  <Image
                    src={`data:image/jpeg;base64,${picture}`}
                    className={"post-image"}
                    alt=""
                    layout="responsive"
                    width="100%"
                    height="100%"
                    
                  />
                )}

                {/* <Image src={logo} className="post-image" alt="" /> */}
                <div>
                  <input
                    className=" bntyel10"
                    type="file"
                    id="image"
                    accept=".png, .jpeg, .jpg"
                    onChange={handleFileChange}
                    // onChange={(e) => setFile(e.target.files[0])}
                  />
                </div>

                <div className="comment-wrapper">
                  {/* <i className="ic bi bi-emoji-sunglasses"></i> */}
                  <p style={{ width: 100 }}> Name: </p>
                  <textarea
                    type="text"
                    className="comment-box"
                    placeholder="Name"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                  />

                  <p className="comment-btn"></p>
                </div>
                <div className="comment-wrapper">
                  {/* <i className="ic bi bi-emoji-sunglasses"></i> */}
                  <p style={{ width: 100 }}>Sub Name: </p>
                  <textarea
                    type="text"
                    className="comment-box"
                    placeholder="Sub Name"
                    value={subname}
                    onChange={(e) => setSubname(e.target.value)}
                  />

                  <p className="comment-btn"></p>
                </div>
                <div className="comment-wrapper">
                  <p style={{ width: 100 }}>Description: </p>

                  <textarea
                    type="text"
                    className="comment-box"
                    placeholder="Description"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                  />

                  <p className="comment-btn"></p>
                </div>
                <div className="comment-wrapper">
                  <p style={{ width: 100 }}> Status: </p>
                  <textarea
                    type="text"
                    className="comment-box"
                    placeholder="Status"
                    value={status}
                    onChange={(e) => setStatus(e.target.value)}
                  />

                  <p className="comment-btn"></p>
                </div>

                <div className="comment-wrapper">
                  <i className="ic "></i>

                  {/* <input
                    type="text"
                    className="comment-box"
                    placeholder="Location"
                    value={location}
                    onChange={(e) => setLocation(e.target.value)}
                  /> */}

                  <button className="comment-btn" type="submit">
                    Share
                  </button>
                </div>
              </div>
            </form>
          </div>
        </div>
        
      </div>
    </>
  );
}
